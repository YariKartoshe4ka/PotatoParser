from pathlib import Path
import os


class Sketch:
    def __init__(self, indent):
        dirpath = Path('sketch').absolute()
        os.makedirs(dirpath, exist_ok=True)
        self.file = open(dirpath / 'sketch.ino', 'w')

        self.indent = ' ' * indent

        self.payloads = set()
        self.content = []

    def __del__(self):
        self.file.close()

    def add(self, write, payloads=[]):
        if payloads:
            self.payloads.add(*payloads)

        if write:
            self.content.append(write)

    def fprint(self, string=''):
        print(string, file=self.file)

    def make_indents(self, constructions, level=0, indented=None):
        if indented is None:
            indented = []

        for construction in constructions:
            if isinstance(construction, str):
                indented.append(self.indent * level + construction)
            else:
                self.make_indents(construction, level + 1, indented)

        return indented

    def flush(self):
        self.fprint('''//
//   Generated by PotatoParser
//   Do not forget to star the repo :)
//   If you have any question or trouble, create issue
//   https://gihub.com/YariKartoshe4ka/PotatoParser
//

#include "Keyboard.h"

''')

        for payload in self.payloads:
            for line in self.make_indents(payload.text):
                self.fprint(line)
            self.fprint()

        self.fprint(f'''void setup() {{
{self.indent}// Initialize keyboard library
{self.indent}Keyboard.begin();

{self.indent}// Start of payload''')

        for line in self.make_indents(self.content):
            self.fprint(line)

        self.fprint('}\n\nvoid loop() { }')
